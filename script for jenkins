pipeline {
    agent any
    tools{
        jdk 'jdk17'
        maven 'maven'
    }
    environment{
        SCANNER_HOME= tool ('sonar-scanner')
    }

    stages {
        stage('Git Checkout') {
            steps {
                git branch: 'main', changelog: false, poll: false, url: 'https://github.com/dhamuhema/Maven-Tomcat-Nexus-Sonar-Setup.git'
            }
        }
        stage('Maven Clean Compile') {
            steps {
                sh "mvn clean compile"
            }
        }
        stage('Maven Test') {
            steps {
                sh "mvn test"
            }
        }
         stage('Sonarqube Analysis') {
            steps {
                withSonarQubeEnv('sonar-server') {
                     sh ''' $SCANNER_HOME/bin/sonar-scanner -Dsonar-projectName=java-tomcat-maven-example \
                     -Dsonar.java.binaries=. \
                     -Dsonar.projectKey=java-tomcat-maven-example '''
                }
            }
        }
         stage('Maven Package') {
            steps {
                sh "mvn package"
            }
        }
        stage('OWASP DependencyCheck') {
            steps {
                dependencyCheck additionalArguments: '--scan target/', odcInstallation: 'owasp'
                dependencyCheckPublisher pattern: '**/dependency-check-report.xml'
            }
        }
        stage('Maven Deploy to Nexus') {
            steps {
                configFileProvider([configFile(fileId: 'f6b6e41a-fe41-4054-9b48-06a5a6a3fdce', targetLocation: 'maven-releases', variable: 'mavensettings')]) {
                    sh "mvn -s $mavensettings clean deploy -DskipTests=true"
                }
            }
        }
        stage('Deploy To Tomcat') {
            steps {
                deploy adapters: [tomcat9(credentialsId: 'ca42953d-cafb-4cb5-b053-637047c3c2a6', path: '', url: 'http://54.242.0.207:8089/')], contextPath: 'java-tomcat-maven-example', war: '**/*war' 
            }
        }
    }
}
