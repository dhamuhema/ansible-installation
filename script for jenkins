pipeline {
    agent any
    tools{
        jdk 'jdk17'
        maven 'maven'
    }
    environment{
        SCANNER_HOME= tool ('sonar-scanner')
    }

    stages {
        stage('Git Checkout') {
            steps {
                git branch: 'main', changelog: false, poll: false, url: 'https://github.com/jaiswaladi246/Petclinic.git'
            }
        }
        stage('Maven Clean Compile') {
            steps {
                sh "mvn clean compile"
            }
        }
        stage('Maven Test') {
            steps {
                sh "mvn test"
            }
        }
        stage('Sonarqube Analysis') {
            steps {
                withSonarQubeEnv('sonar-server') {
                     sh ''' $SCANNER_HOME/bin/sonar-scanner -Dsonar.ProjectName=petclinic \
                     -Dsonar.java.binaries=. -Dsonar.projectKey=petclinic '''
                }
            }
        }
        stage('Maven Package') {
            steps {
                sh "mvn package"
            }
        }
        stage('OWASP Dependencycheck') {
            steps {
                dependencyCheck additionalArguments: '--scan target/', odcInstallation: 'OWASP'
                dependencyCheckPublisher pattern: '**\\dependency-check-report.xml'
            }
        }
        stage('Deploy To Tomcat') {
            steps {
                deploy adapters: [tomcat9(credentialsId: 'ae187846-f457-4beb-99f3-ab04088dee94', path: '', url: 'http://3.80.186.167:8089/')], contextPath: null, war: '**\\*.war'
            }
        }
        stage('Deploy To Nexus') {
            steps {
                nexusArtifactUploader artifacts: [[artifactId: 'maven-releasesartifactId', classifier: '', file: 'target/petclinic.war', type: 'war']], credentialsId: 'f998c257-d0b5-4b25-90c9-3363b665e53f', groupId: 'com.maven-releases.app', nexusUrl: '3.80.186.167:8081/', nexusVersion: 'nexus3', protocol: 'http', repository: 'maven-releases', version: '2.1.2-maven-releases'
            }
        }
        stage('Build Image') {
            steps {
                script{
                    withDockerRegistry(credentialsId: '1148837e-a579-4c77-8d36-f8d27060b948') {
                         sh "docker build -t petclinic -f Dockerfile ."
                         sh "docker tag petclinic dhamuhema/petclinic:latest"
                    }
                }
            }
        }
        stage('Docker push') {
            steps {
                script{
                    withDockerRegistry(credentialsId: '1148837e-a579-4c77-8d36-f8d27060b948') {
                         sh "docker push dhamuhema/petclinic:latest"
                    }
                }
            }
        }
        stage('Docker Run') {
            steps {
                script{
                    withDockerRegistry(credentialsId: '1148837e-a579-4c77-8d36-f8d27060b948') {
                        sh "docker run -d --name petclinic -p 8082:8082 dhamuhema/petclinic:latest"
                    }
                }
            }
        }
    }
}
